{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/insomnia/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsC1C,4BAAiB;;;;IAE7C;;;OAGG;;;;;IAEH,4BAAS;;;;kBAAmB,MAAM,CAAC,EAAE;IAErC;;;OAGG;;;;;IAEH,kCAAe;;;;kBAAmB,MAAM,CAAC,EAAE;;gBAf5C,UAAU;;;QAOR,OAAO,EAAE;;;;6CAC2B;;QAMpC,OAAO,EAAE;;;;mDACiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAdhC,QAAQ;QARpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,yBAAyB;YACjC,SAAS,EAAE,kBAAkB;YAC7B,IAAI,EAAE,4DAA4D;YAClE,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC;SACrF,CAAC;OAEW,QAAQ,EAgBpB;mBAvDD;EAuC8B,iBAAiB;SAAlC,QAAQ","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n\n/**\n * @name Insomnia\n * @description\n * Prevent the screen of the mobile device from falling asleep.\n *\n * @usage\n * ```typescript\n * import { Insomnia } from '@ionic-native/insomnia';\n *\n * constructor(private insomnia: Insomnia) { }\n *\n * ...\n *\n * this.insomnia.keepAwake()\n *   .then(\n *     () => console.log('success'),\n *     () => console.log('error')\n *   );\n *\n * this.insomnia.allowSleepAgain()\n *   .then(\n *     () => console.log('success'),\n *     () => console.log('error')\n *   );\n * ```\n *\n */\n@Plugin({\n  pluginName: 'Insomnia',\n  plugin: 'cordova-plugin-insomnia',\n  pluginRef: 'plugins.insomnia',\n  repo: 'https://github.com/EddyVerbruggen/Insomnia-PhoneGap-Plugin',\n  platforms: ['Android', 'Browser', 'Firefox OS', 'iOS', 'Windows', 'Windows Phone 8']\n})\n@Injectable()\nexport class Insomnia extends IonicNativePlugin {\n\n  /**\n   * Keeps awake the application\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  keepAwake(): Promise<any> { return; }\n\n  /**\n   * Allows the application to sleep again\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  allowSleepAgain(): Promise<any> { return; }\n\n}\n"]}